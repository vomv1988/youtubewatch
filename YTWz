#!/bin/bash

#	Y T W z
#	o u a e
#	u b t n
#	  e c i
#	    h t
#	      y

#	An extremely minimalistic youtube player.
#		...Zenity-enhanced edition!

#	${1}	Youtube URL
#	${2}	Video format
#		Values:
#		5	240p FLV
#		36	240p 3GP
#		83	240p MP4
#		More	http://en.wikipedia.org/wiki/YouTube#Quality_and_codecs

#	Dependencies:
#		youtube-dl
#		mplayer
#		zenity

#	Recommended:
#		links2
#		xdotool
#		xsel

#	Use:
#		links2 -g www.youtube.com
#	to browse youtube, copy video URLs with
#		Alt+F, c
#	and paste, assigning the following line to some hotkey:
#		xdotool type `xsel`

#	Please modify the following varialbles to fit your needs:

#		Where you want your videos to be saved (this is the PWD by default):

			DOWNLOAD_DIR=`pwd`

#		Uncomment the following line if you have already created directory ~/youtube,
#		and wish your videos to be saved there:

#			DOWNLOAD_DIR=~/youtube

#		How many seconds you wish to wait since the time you begin to download the
#		video, to the moment it starts playing. This gives youtube-dl time to
#		buffer the video. Consider your internet connection's speed, and just
#		use common sense (or trial and error) here:

			BUFF_DELAY=20

#		The default video format. Format 5 is chosen because it plays efficiently.

			FORMAT=5

ARGS=`zenity --entry --text='To proud owners of legacy, or otherwise slow, computers worldwide;\nI give you: YouTubeWatch, an extremely minimalistic youtube player\n\nEnter youtube URL below, or enter empty string for help:' --title 'YouTubeWatch'`
if test ${?} = 1 ; then
	exit 0
fi
set ${ARGS}
USAGE='
YouTubeWatch ...Zenity-enhanced edition!
	An extremely minimalistic youtube player.
	Usage:
		In the text prompt, you may enter a string 
		of the form:
			url fmt
		url	Youtube video URL
		fmt	Video format (optional)
			Values:
			5		for 240p FLV
			36		for 240p 3GP
			83		for 240p MP4
			More in:
http://en.wikipedia.org/wiki/YouTube#Quality_and_codecs
	Extra advice:
		Use
			links2 -g www.youtube.com
		to browse youtube, copy video URLs with
			Alt+F, c
		and paste, assigning the following line
		to some hotkey:
			xdotool type `xsel`
'
if test ${#} -lt 1 ; then
	zenity --error --title Error --text 'You have entered an empty string, read below:\n'"${USAGE}"
	exit 1
fi
if test ${#} -ge 2 ; then
	ALL_NUMERIC=`echo ${2} | grep [^0-9]`
	if test -n "${ALL_NUMERIC}" ; then
		echo Wrong fmt value. Defaulting to 5...
	else
		FORMAT=${2}
		echo Video format ${FORMAT} selected.
	fi
fi
URL="${1}"
cd "${DOWNLOAD_DIR}"
FILENAME=`echo ${1} | sed 's/.*=//'`
youtube-dl --no-progress -t --restrict-filenames -f "${FORMAT}" "${URL}" &
DL_PID=$!
PROC_RUNNING=`ps -e | grep ${DL_PID}`
while test ! -e *${FILENAME}* -a -n "${PROC_RUNNING}" ; do
	PROC_RUNNING=`ps -e | grep ${DL_PID}`
	echo x
done | zenity --progress --pulsate --auto-close \
	--text "Starting download, with video format ${FORMAT}..." \
	--title Download
sleep 1
PROC_RUNNING=`ps -e | grep ${DL_PID}`
if test ! -e *${FILENAME}* -a -z "${PROC_RUNNING}" ; then
	echo Could not download video. Exiting...
	zenity --error --title Error --text "Could not download video."
	exit 2
fi
echo File created!
ls -- *${FILENAME}*
FILE=`ls *${FILENAME}*`
echo Please wait ${BUFF_DELAY} seconds
echo '(for your video to buffer)'
date
{ echo x ; sleep ${BUFF_DELAY} ; } | zenity --progress --pulsate --auto-close \
	--text "Buffering video in file ${DOWNLOAD_DIR}/${FILE}..." --title 'Buffer'
date
echo Playing...
ls -alh -- *${FILENAME}*
mplayer -hardframedrop -fs -lavdopts skipframe=noref:skiploopfilter=all -- *${FILENAME}*
zenity --question --title Delete --text "Delete file ${FILE}?"
if test ${?} = 0 ; then
	rm *${FILENAME}*
	if test ! -e *${FILENAME}* ; then
		zenity --title Success --info --text "File ${FILE} has been deleted"
	else
		zenity --title Error --error --text "Could not delete ${FILE}"
	fi
fi
